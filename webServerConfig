server {
    listen 443 ssl;

    server_name wywmctvjiph9s4.duckdns.org www.wywmctvjiph9s4.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/wywmctvjiph9s4.duckdns.org/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/wywmctvjiph9s4.duckdns.org/privkey.pem; 

    location / {
        proxy_pass https://10.0.1.6/;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name rullgardin.duckdns.org www.rullgardin.duckdns.org;
    
    root /var/www/rullgardin.duckdns.org/html;
    index index.html;

    return 301 https://rullgardin.duckdns.org$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443;

    ssl_certificate /etc/letsencrypt/live/wywmctvjiph9s4.duckdns.org/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/wywmctvjiph9s4.duckdns.org/privkey.pem; 

    server_name rullgardin.duckdns.org www.rullgardin.duckdns.org;

    root /var/www/rullgardin.duckdns.org/html;
    index home;


    location /update-ip {
            content_by_lua '
                    local file, err = io.open("/usr/local/openresty/nginx/redirect_url.txt", "w+")
                    if file == nil then
                        ngx.log(ngx.STDERR, "Couldn\'t open file: " .. err)
                    else
                        file:write(ngx.var.arg_newip)
                        file:close()
                    end
            ';
            return 200;
    }
    
    location / {
        return 301 /home;
    }

    location /home {
        set_by_lua_block $ip {
            local file, err = io.open("/usr/local/openresty/nginx/redirect_url.txt", "r")
            local url = "https://google.com"
            if file == nil then
                ngx.log(ngx.STDERR, "Couldn\'t open file: " .. err)
            else
                io.input(file)
                url = io.read()
                file:close()
                return url
            end
        }
        sub_filter_once off;
        sub_filter "___serverip___" $ip;
        default_type "text/html";
    }
}